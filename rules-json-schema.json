{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "TCG Game Rules Schema",
  "description": "Schema for defining trading card game rules in a data-driven format",
  "type": "object",
  "required": ["gameInfo", "zones", "cardProperties", "turnStructure", "winConditions"],
  "properties": {
    "gameInfo": {
      "type": "object",
      "description": "Basic information about the game",
      "required": ["name", "version"],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the card game"
        },
        "version": {
          "type": "string",
          "description": "The version of the game rules, using semantic versioning"
        },
        "description": {
          "type": "string",
          "description": "A brief description of the game"
        },
        "playerCount": {
          "type": "object",
          "description": "Supported player counts",
          "properties": {
            "min": {
              "type": "integer",
              "minimum": 1,
              "description": "Minimum number of players supported"
            },
            "max": {
              "type": "integer",
              "minimum": 1,
              "description": "Maximum number of players supported"
            },
            "recommended": {
              "type": "integer",
              "minimum": 1,
              "description": "Recommended number of players"
            }
          },
          "required": ["min", "max"]
        }
      }
    },
    "zones": {
      "type": "array",
      "description": "Areas in the game where cards can exist (deck, hand, field, etc.)",
      "items": {
        "$ref": "#/definitions/zone"
      },
      "minItems": 1
    },
    "cardProperties": {
      "type": "array",
      "description": "Properties that cards can have in this game",
      "items": {
        "$ref": "#/definitions/cardProperty"
      },
      "minItems": 1
    },
    "resources": {
      "type": "array",
      "description": "Resources that players track during the game (life, mana, etc.)",
      "items": {
        "$ref": "#/definitions/resource"
      }
    },
    "turnStructure": {
      "type": "object",
      "description": "Defines how turns progress in the game",
      "required": ["phases"],
      "properties": {
        "initialPlayer": {
          "type": "string",
          "description": "How to determine the starting player",
          "enum": ["random", "first", "last", "choice", "youngest", "oldest"]
        },
        "playOrder": {
          "type": "string",
          "description": "Direction of play",
          "enum": ["clockwise", "counterclockwise", "static"]
        },
        "phases": {
          "type": "array",
          "description": "Phases within each turn",
          "items": {
            "$ref": "#/definitions/phase"
          },
          "minItems": 1
        }
      }
    },
    "setupRules": {
      "type": "object",
      "description": "Rules for setting up the game",
      "properties": {
        "deckSetup": {
          "type": "object",
          "description": "Rules for setting up the deck",
          "properties": {
            "type": {
              "type": "string",
              "description": "The type of deck to use",
              "enum": ["standardDeck", "customDeck", "predefined"]
            },
            "jokers": {
              "type": "boolean",
              "description": "Whether to include jokers in a standard deck"
            },
            "customDeckRules": {
              "type": "string",
              "description": "Description of custom deck construction rules"
            },
            "predefinedDeckId": {
              "type": "string",
              "description": "ID of a predefined deck to use"
            }
          },
          "required": ["type"]
        },
        "initialHandSize": {
          "type": "object",
          "description": "Number of cards each player starts with, by player count",
          "patternProperties": {
            "^players\\d+$": {
              "type": "integer",
              "minimum": 0,
              "description": "Hand size for a specific player count"
            }
          }
        },
        "initialResources": {
          "type": "array",
          "description": "Initial resource amounts that differ from defaults",
          "items": {
            "type": "object",
            "properties": {
              "resourceId": {
                "type": "string",
                "description": "ID of the resource"
              },
              "amount": {
                "type": "integer",
                "description": "Starting amount of the resource"
              }
            },
            "required": ["resourceId", "amount"]
          }
        }
      }
    },
    "winConditions": {
      "type": "array",
      "description": "Conditions that determine when a player wins",
      "items": {
        "$ref": "#/definitions/winCondition"
      },
      "minItems": 1
    },
    "scoringRules": {
      "type": "object",
      "description": "Rules for scoring the game",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of scoring system",
          "enum": ["highestScore", "lowestScore", "targetScore", "binary"]
        },
        "parameters": {
          "type": "object",
          "description": "Parameters specific to the scoring type"
        }
      },
      "required": ["type"]
    },
    "customConditions": {
      "type": "array",
      "description": "Custom condition types specific to this game",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the condition"
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of what the condition checks"
          },
          "parameters": {
            "type": "array",
            "description": "Parameters the condition accepts",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the parameter"
                },
                "type": {
                  "type": "string",
                  "description": "Data type of the parameter",
                  "enum": ["string", "number", "boolean", "array", "object", "reference"]
                },
                "description": {
                  "type": "string",
                  "description": "Description of the parameter's purpose"
                }
              },
              "required": ["name", "type"]
            }
          }
        },
        "required": ["id", "description"]
      }
    },
    "customEffects": {
      "type": "array",
      "description": "Custom effect types specific to this game",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the effect"
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of what the effect does"
          },
          "parameters": {
            "type": "array",
            "description": "Parameters the effect accepts",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the parameter"
                },
                "type": {
                  "type": "string",
                  "description": "Data type of the parameter",
                  "enum": ["string", "number", "boolean", "array", "object", "reference"]
                },
                "description": {
                  "type": "string",
                  "description": "Description of the parameter's purpose"
                }
              },
              "required": ["name", "type"]
            }
          },
          "steps": {
            "type": "array",
            "description": "Steps involved in executing this effect",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "Type of step"
                },
                "description": {
                  "type": "string",
                  "description": "Description of this step"
                }
              },
              "required": ["type"]
            }
          }
        },
        "required": ["id", "description"]
      }
    }
  },
  "definitions": {
    "zone": {
      "type": "object",
      "description": "A area in the game where cards can exist",
      "required": ["id", "displayName", "visibility", "owner"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the zone"
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable name for display purposes"
        },
        "visibility": {
          "type": "string",
          "description": "Who can see cards in this zone",
          "enum": ["public", "owner", "hidden"]
        },
        "owner": {
          "type": "string",
          "description": "Who owns this zone",
          "enum": ["player", "shared"]
        },
        "ordered": {
          "type": "boolean",
          "description": "Whether card order matters in this zone",
          "default": false
        },
        "maxCards": {
          "type": ["integer", "null"],
          "description": "Maximum number of cards allowed in this zone (null for unlimited)",
          "minimum": 0
        },
        "faceDown": {
          "type": "boolean",
          "description": "Whether cards in this zone are placed face down by default",
          "default": false
        },
        "canReorder": {
          "type": "boolean",
          "description": "Whether the owner can manually reorder cards in this zone",
          "default": true
        }
      }
    },
    "cardProperty": {
      "type": "object",
      "description": "A property that cards can have in this game",
      "required": ["id", "displayName", "type"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for this property"
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable name for display purposes"
        },
        "type": {
          "type": "string",
          "description": "Data type of the property",
          "enum": ["number", "string", "boolean", "array", "object"]
        },
        "defaultValue": {
          "description": "Default value for this property if not specified"
        },
        "required": {
          "type": "boolean",
          "description": "Whether this property is required for all cards",
          "default": false
        },
        "minimum": {
          "type": "number",
          "description": "Minimum value for number properties"
        },
        "maximum": {
          "type": "number",
          "description": "Maximum value for number properties"
        },
        "enum": {
          "type": "array",
          "description": "List of allowed values for this property",
          "items": {}
        },
        "hidden": {
          "type": "boolean",
          "description": "Whether this property is hidden from players",
          "default": false
        }
      }
    },
    "resource": {
      "type": "object",
      "description": "A resource that players track during the game",
      "required": ["id", "displayName", "startingValue"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for this resource"
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable name for display purposes"
        },
        "startingValue": {
          "type": "number",
          "description": "The initial value of this resource"
        },
        "minimum": {
          "type": ["number", "null"],
          "description": "Minimum value for this resource (null for unlimited)",
          "default": 0
        },
        "maximum": {
          "type": ["number", "null"],
          "description": "Maximum value for this resource (null for unlimited)"
        },
        "resetsEachTurn": {
          "type": "boolean",
          "description": "Whether this resource resets to a specific value each turn",
          "default": false
        },
        "resetValue": {
          "type": "number",
          "description": "Value to reset to if resetsEachTurn is true"
        },
        "incrementEachTurn": {
          "type": "number",
          "description": "Amount to increase this resource each turn (0 for none)",
          "default": 0
        },
        "hidden": {
          "type": "boolean",
          "description": "Whether this resource is hidden from opponents",
          "default": false
        }
      }
    },
    "phase": {
      "type": "object",
      "description": "A phase in the turn structure",
      "required": ["id", "displayName"],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for this phase"
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable name for display purposes"
        },
        "description": {
          "type": "string",
          "description": "Description of what happens in this phase"
        },
        "allowedActions": {
          "type": "array",
          "description": "Actions that players can take during this phase",
          "items": {
            "$ref": "#/definitions/action"
          }
        },
        "automaticActions": {
          "type": "array",
          "description": "Actions that happen automatically at the start of this phase",
          "items": {
            "$ref": "#/definitions/automaticAction"
          }
        },
        "skippable": {
          "type": "boolean",
          "description": "Whether this phase can be skipped",
          "default": false
        },
        "eachPlayer": {
          "type": "boolean",
          "description": "Whether each player gets this phase in turn",
          "default": false
        },
        "optional": {
          "type": "boolean",
          "description": "Whether this phase is optional",
          "default": false
        },
        "timerSeconds": {
          "type": "integer",
          "description": "Time limit for this phase in seconds (0 for no limit)",
          "default": 0
        }
      }
    },
    "action": {
      "type": "object",
      "description": "An action that players can take",
      "required": ["type", "displayName"],
      "properties": {
        "type": {
          "type": "string",
          "description": "Unique identifier for this action type"
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable name for display purposes"
        },
        "description": {
          "type": "string",
          "description": "Description of what this action does"
        },
        "from": {
          "type": ["string", "null"],
          "description": "Source zone ID for card movement actions"
        },
        "to": {
          "type": ["string", "null"],
          "description": "Destination zone ID for card movement actions"
        },
        "targetType": {
          "type": "string",
          "description": "Type of target this action requires",
          "enum": ["none", "player", "card", "zone", "multiple"]
        },
        "mandatory": {
          "type": "boolean",
          "description": "Whether the player must perform this action if able",
          "default": false
        },
        "repeatable": {
          "type": "boolean",
          "description": "Whether this action can be performed multiple times in the same phase",
          "default": true
        },
        "cost": {
          "type": "array",
          "description": "Resources or other costs required to perform this action",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of cost",
                "enum": ["resource", "discard", "sacrifice", "other"]
              },
              "resourceId": {
                "type": "string",
                "description": "ID of the resource for resource costs"
              },
              "amount": {
                "type": ["number", "object"],
                "description": "Amount of the resource or number of cards"
              },
              "description": {
                "type": "string",
                "description": "Description of the cost"
              }
            },
            "required": ["type"]
          }
        },
        "conditions": {
          "type": "array",
          "description": "Conditions that must be met to perform this action",
          "items": {
            "$ref": "#/definitions/condition"
          }
        },
        "effects": {
          "type": "array",
          "description": "Effects that occur when this action is performed",
          "items": {
            "$ref": "#/definitions/effect"
          }
        }
      }
    },
    "automaticAction": {
      "type": "object",
      "description": "An action that happens automatically",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "description": "Unique identifier for this action type"
        },
        "description": {
          "type": "string",
          "description": "Description of what this action does"
        },
        "conditions": {
          "type": "array",
          "description": "Conditions for this automatic action to occur",
          "items": {
            "$ref": "#/definitions/condition"
          }
        },
        "effects": {
          "type": "array",
          "description": "Effects that occur when this action happens",
          "items": {
            "$ref": "#/definitions/effect"
          }
        }
      }
    },
    "condition": {
      "type": "object",
      "description": "A condition that can be checked",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of condition to check"
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of this condition"
        },
        "parameters": {
          "type": "object",
          "description": "Parameters specific to this condition type"
        },
        "negated": {
          "type": "boolean",
          "description": "Whether the condition result should be inverted",
          "default": false
        }
      }
    },
    "effect": {
      "type": "object",
      "description": "An effect that changes the game state",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of effect to apply"
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of this effect"
        },
        "parameters": {
          "type": "object",
          "description": "Parameters specific to this effect type"
        },
        "targetSelector": {
          "type": "object",
          "description": "How to select targets for this effect",
          "properties": {
            "type": {
              "type": "string",
              "description": "Type of target selection",
              "enum": ["specific", "all", "random", "choice"]
            },
            "count": {
              "type": "integer",
              "description": "Number of targets to select (for random or choice)"
            },
            "filter": {
              "type": "object",
              "description": "Filter criteria for eligible targets"
            }
          }
        },
        "optional": {
          "type": "boolean",
          "description": "Whether this effect is optional",
          "default": false
        }
      }
    },
    "winCondition": {
      "type": "object",
      "description": "A condition that determines when a player wins",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of win condition"
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of this win condition"
        },
        "parameters": {
          "type": "object",
          "description": "Parameters specific to this win condition type"
        }
      }
    }
  }
}
